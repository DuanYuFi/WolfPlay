{"remainingRequest":"/home/duanyufi/Web/flower/wolfplay/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/duanyufi/Web/flower/wolfplay/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/duanyufi/Web/flower/wolfplay/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/duanyufi/Web/flower/wolfplay/src/components/bar.vue?vue&type=template&id=f1186e9a&","dependencies":[{"path":"/home/duanyufi/Web/flower/wolfplay/src/components/bar.vue","mtime":1602839348798},{"path":"/home/duanyufi/Web/flower/wolfplay/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/duanyufi/Web/flower/wolfplay/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/duanyufi/Web/flower/wolfplay/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/duanyufi/Web/flower/wolfplay/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}